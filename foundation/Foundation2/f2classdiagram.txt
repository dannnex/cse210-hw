-------------------------------------------

Program Description:
The Order class manages products and a customer, calculating 
the total cost with CalculateTotal by iterating over each Product 
and using GetTotalCost. The AddProduct method allows additional 
products to be appended to the order,and the second constructor 
allows Products to be added at initialization. For labels, 
GetPackingLabel calls GetName and GetProductId on each Product, 
compiling them into a packing list, while GetShippingLabel 
uses the Customerâ€™s address information from GetAddress in 
the Address class. The Customer class determines if the 
shipping location is in the USA by invoking IsInUSA on 
its Address object.

-------------------------------------------

Pruduct Class
_name : string
_productId : int
_price : double
_quantity : int

Product(name:string, productId:int, price:double, quantity:int)
GetTotalCost() : double
GetName() : string
GetProductId() : int

-------------------------------------------

Customer Class
_name : string
_address : Address

Customer(name:string, address:Address)
IsInUSA() : bool

-------------------------------------------

Address Class
_streetAddress : string
_city : string
_stateOrProvince : string
_country : string

Address(streetAddress:string, city:string, stateOrProvince:string, counry:string)
GetAddress() : string
IsInUSA() : bool

-------------------------------------------

Order Class
_customer : Customer
_products : List<Product>

Order(customer:Customer)
Order(customer:Customer, products:List<Product>)
AddProduct(product : Product) : void
CalculateTotal() : double
GetPackingLabel() : string
GetShippingLabel() : string

-------------------------------------------